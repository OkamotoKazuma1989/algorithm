# coding: UTF-8

# ＜問題＞
# 迷路の探索（深さ優先）のプログラムを作成しなさい。

import sys

maze = [
  [9,9,9,9,9,9,9,9,9,9,9,9],
  [9,0,0,0,9,0,0,0,0,0,0,9],
  [9,0,9,0,0,0,9,9,0,9,9,9],
  [9,0,9,9,0,9,0,0,0,9,0,9],
  [9,0,0,0,9,0,0,9,9,0,9,9],
  [9,9,9,0,0,9,0,9,0,0,0,9],
  [9,0,0,0,9,0,9,0,0,9,1,9],
  [9,0,9,0,0,0,0,9,0,0,9,9],
  [9,0,0,9,0,9,0,0,9,0,0,9],
  [9,0,9,0,9,0,9,0,0,9,0,9],
  [9,0,0,0,0,0,0,9,0,0,0,9],
  [9,9,9,9,9,9,9,9,9,9,9,9],
]

def search(x,y,depth):

    #ゴールに着くと終了
    if maze[x][y] == 1:
        print(depth)
        exit()

    #探索済みとしてのセット
    maze[x][y] = 2

    #上下左右を探索(左→右→上→下の順に探索する)
    if maze[x-1][y] < 2:
        search(x-1,y,depth+1)
        #移動回数を増やして左をリストに追加

    if maze[x+1][y] < 2:
        search(x+1,y,depth+1)
        #移動回数を増やして右をリストに追加

    if maze[x][y-1] < 2:
        search(x,y-1,depth+1)
        #移動回数を増やして上をリストに追加

    if maze[x][y+1] < 2:
        search(x,y+1,depth+1)
        #移動回数を増やして上をリストに追加

    #探索前に戻す
    maze[x][y] = 0

#スタート位置から開始
search(1,1,0)
